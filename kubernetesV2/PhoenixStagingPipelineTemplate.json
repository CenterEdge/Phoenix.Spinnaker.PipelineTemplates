{
    "schema": "v2",
    "id": "phnx-staging-pipeline-template-kv2",
    "metadata": {
        "description": "Creates a pipeline that deploys staging pods for smoke tests or other testing",
        "name": "Kubernetes V2 Phoenix Service Staging Template",
        "scopes": [
            "global"
        ]
    },
    "protect": false,
    "variables": [
        {
            "defaultValue": "",
            "description": "Application Name",
            "name": "appName",
            "type": "string"
        },
        {
            "defaultValue": "",
            "description": "The service name (i.e. Phoenix.Service.Waivers -> Waivers; capitalization might be necessary.",
            "name": "serviceName",
            "type": "string"
        },
        {
            "defaultValue": "*",
            "description": "Prod Cluster Name (i.e. waivers-prod-api); leave '*' to use default pattern: {appName}-prod-api.",
            "name": "prodClustername",
            "type": "string"
        },
        {
            "defaultValue": "*",
            "description": "The Staging Load Balancer Name (i.e. waivers-staging-api); leave '*' to use default pattern: {appName}-staging-api.",
            "name": "stagingLoadBalancerName",
            "type": "string"
        },
        {
            "defaultValue": "*",
            "description": "The Prod Load Balancer Name (i.e. waivers-prod-api); leave '*' to use default pattern: {appName}-prod-api.",
            "name": "prodLoadBalancerName",
            "type": "string"
        },
        {
            "defaultValue": false,
            "description": "Determines whether a separate set of pods should be created for batch jobs",
            "name": "jobsEnabled",
            "type": "boolean"
        },
        {
            "defaultValue": "*",
            "description": "The name of jobs cluster that contains the k8s pods generated by this pipeline; leave '*' to use default pattern: {appName}-jobs-api",
            "name": "jobsClusterName",
            "type": "string"
        },
        {
            "defaultValue": "*",
            "description": "The name of the jobs load balancer for clusters created by this pipeline; leave '*' to use default pattern: {appName}-prod-jobs",
            "name": "jobsLoadBalancer",
            "type": "string"
        },
        {
            "defaultValue": "phoenix-177420",
            "description": "The GCR account name that contains the image",
            "name": "gcrAccountName",
            "type": "string"
        },
        {
            "defaultValue": "*",
            "description": "The image name to pull; leave '*' to use default pattern: phoenix-service-{appName}",
            "name": "gcrImageName",
            "type": "string"
        },
        {
            "defaultValue": true,
            "description": "Is Shawarma Enabled?",
            "name": "shawarmaEnabled",
            "type": "boolean"
        },
        {
            "defaultValue": "-",
            "description": "The IAM role name for the service to use; leave '-' to not use",
            "name": "iamRole",
            "type": "string"
        },
        {
            "defaultValue": "100m",
            "description": "Pod Requested CPU",
            "name": "reqCPU",
            "type": "string"
        },
        {
            "defaultValue": "512Mi",
            "description": "Pod Requested Memory",
            "name": "reqMem",
            "type": "string"
        },
        {
            "defaultValue": "200m",
            "description": "Pod Max CPU",
            "name": "maxCPU",
            "type": "string"
        },
        {
            "defaultValue": "4096Mi",
            "description": "Pod Max Memory",
            "name": "maxMem",
            "type": "string"
        },
        {
            "defaultValue": "100",
            "description": "StatsD Sample Rate 0-100",
            "name": "statsdSampleRate",
            "type": "int"
        }
    ],
    "pipeline": {
        "expectedArtifacts": [
            {
                "defaultArtifact": {
                    "customKind": true,
                    "id": "39b0955b-01fc-4001-aa27-9dfa7074937a"
                },
                "displayName": "${ templateVariables.appName }",
                "id": "0f5786e8-3a1e-4dc3-a038-3d31bf6c1366",
                "matchArtifact": {
                    "artifactAccount": "docker-registry",
                    "name": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                    "type": "docker/image"
                },
                "useDefaultArtifact": false,
                "usePriorArtifact": false
            }
        ],
        "keepWaitingPipelines": false,
        "limitConcurrent": true,
        "stages": [
            {
                "account": "phoenix-v2",
                "cloudProvider": "kubernetes",
                "manifests": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "moniker.spinnaker.io/detail": "api",
                                "moniker.spinnaker.io/stack": "staging",
                                "traffic.spinnaker.io/load-balancers": "[\"service ${ templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName }\"]"
                            },
                            "name": "${ templateVariables.appName }staging",
                            "namespace": "default"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "app": "${ templateVariables.appName }staging"
                                }
                            },
                            "strategy": {
                                "type": "Recreate"
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "moniker.spinnaker.io/detail": "api",
                                        "moniker.spinnaker.io/stack": "staging",
                                        "shawarma.centeredge.io/service-name": "${ templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName }"
                                    },
                                    "labels": {
                                        "app": "${ templateVariables.appName }staging"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "ASPNETCORE_ENVIRONMENT",
                                                    "value": "Staging"
                                                },
                                                {
                                                    "name": "Statsd__Config__StatsdServerName",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "apiVersion": "v1",
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "Statsd__Enabled",
                                                    "value": "true"
                                                },
                                                {
                                                    "name": "BusinessEntities__Host",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "url",
                                                            "name": "businessentities-api",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "Couchbase__ConnectionString",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "connectionString",
                                                            "name": "couchbase-primary",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "Couchbase__Username",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "couchbase-primary",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "Couchbase__Password",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "couchbase-primary",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "ASPNETCORE_URLS",
                                                    "value": "http://localhost:8080/"
                                                },
                                                {
                                                    "name": "RabbitMQ__Hosts__0__Host",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "host",
                                                            "name": "rabbitmq",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "RabbitMQ__Username",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "username",
                                                            "name": "rabbitmq",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "RabbitMQ__Password",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "default-pass",
                                                            "name": "rabbitmq-config",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LaunchDarklyOptions__SdkKey",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "key",
                                                            "name": "feature-flag-key",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HtmlToPdf__Host",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "url",
                                                            "name": "pdf-api"
                                                        }
                                                    }
                                                }
                                            ],
                                            "image": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health?type=ready",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 1
                                            },
                                            "name": "${ templateVariables.appName }",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/health?type=ready",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 15,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 1
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "${ templateVariables.maxCPU }",
                                                    "memory": "${ templateVariables.maxMem }"
                                                },
                                                "requests": {
                                                    "cpu": "${ templateVariables.reqCPU }",
                                                    "memory": "${ templateVariables.reqMem }"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "STATSD_SERVER",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "apiVersion": "v1",
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "STATSD_SAMPLE_RATE",
                                                    "value": "${ templateVariables.statsdSampleRate.toString() }"
                                                },
                                                {
                                                    "name": "SERVICE_NAME",
                                                    "value": "prod.${ templateVariables.appName }"
                                                },
                                                {
                                                    "name": "TimeoutOptions__ConnectTimeout",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "connect_read_write",
                                                            "name": "timeouts",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "TimeoutOptions__ReadTimeout",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "connect_read_write",
                                                            "name": "timeouts",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "TimeoutOptions__SendTimeout",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "connect_read_write",
                                                            "name": "timeouts",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "WaiverUploadOptions__MaxRequestSize",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "max_size",
                                                            "name": "waiver-upload-options",
                                                            "optional": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PROXY_HOST",
                                                    "value": "localhost"
                                                },
                                                {
                                                    "name": "PROXY_PORT",
                                                    "value": "8080"
                                                },
                                                {
                                                    "name": "HEALTH_CHECK_URI",
                                                    "value": "/health"
                                                }
                                            ],
                                            "image": "us.gcr.io/phoenix-177420/nginx-proxy:27",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "nginx-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 80,
                                                    "name": "http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "${ templateVariables.maxCPU }",
                                                    "memory": "${ templateVariables.maxMem }"
                                                },
                                                "requests": {
                                                    "cpu": "${ templateVariables.reqCPU }",
                                                    "memory": "${ templateVariables.reqMem }"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "imagePullSecrets": [
                                        {
                                            "name": "gcr-phoenix"
                                        }
                                    ],
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        }
                    }
                ],
                "moniker": {
                    "app": "${ templateVariables.appName }"
                },
                "name": "Deploy (Staging)",
                "refId": "2",
                "requiredArtifactIds": [
                    "0f5786e8-3a1e-4dc3-a038-3d31bf6c1366"
                ],
                "requiredArtifacts": [],
                "requisiteStageRefIds": [],
                "skipExpressionEvaluation": false,
                "source": "text",
                "trafficManagement": {
                    "enabled": false,
                    "options": {
                        "enableTraffic": false,
                        "services": []
                    }
                },
                "type": "deployManifest"
            }
        ],
        "triggers": [
            {
                "account": "gcr-phoenix",
                "enabled": true,
                "expectedArtifactIds": [
                    "0f5786e8-3a1e-4dc3-a038-3d31bf6c1366"
                ],
                "organization": "${ templateVariables.gcrAccountName }",
                "registry": "us.gcr.io",
                "repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                "runAsUser": "phoenix-svc-account",
                "type": "docker"
            }
        ]
    }
}