{
  "schema": "v2",
  "id": "phnx-pipeline-template",
  "variables": [
    {
      "defaultValue": "",
      "description": "Application Name",
      "name": "appName",
      "type": "string"
    },
    {
      "defaultValue": "",
      "description": "The service name (i.e. Phoenix.Service.Waivers -> Waivers; capitalization might be necessary.",
      "name": "serviceName",
      "type": "string"
    },
    {
      "defaultValue": "*",
      "description": "Prod Cluster Name (i.e. waivers-prod-api); leave '*' to use default pattern: {appName}-prod-api.",
      "name": "prodClustername",
      "type": "string"
    },
    {
      "defaultValue": "*",
      "description": "The Staging Load Balancer Name (i.e. waivers-staging-api); leave '*' to use default pattern: {appName}-staging-api.",
      "name": "stagingLoadBalancerName",
      "type": "string"
    },
    {
      "defaultValue": "*",
      "description": "The Prod Load Balancer Name (i.e. waivers-prod-api); leave '*' to use default pattern: {appName}-prod-api.",
      "name": "prodLoadBalancerName",
      "type": "string"
    },
    {
      "name": "jobsEnabled",
      "type": "boolean",
      "description": "Determines whether a separate set of pods should be created for batch jobs",
      "defaultValue": false
    },
    {
      "name": "jobsClusterName",
      "type": "string",
      "description": "The name of jobs cluster that contains the k8s pods generated by this pipeline; leave '*' to use default pattern: {appName}-jobs-api",
      "defaultValue": "*"
    },
    {
      "name": "jobsLoadBalancer",
      "type": "string",
      "description": "The name of the jobs load balancer for clusters created by this pipeline; leave '*' to use default pattern: {appName}-prod-jobs",
      "defaultValue": "*"
    },
    {
      "defaultValue": "phoenix-177420",
      "description": "The GCR account name that contains the image",
      "name": "gcrAccountName",
      "type": "string"
    },
    {
      "defaultValue": "*",
      "description": "The image name to pull; leave '*' to use default pattern: phoenix-service-{appName}",
      "name": "gcrImageName",
      "type": "string"
    },
    {
      "defaultValue": true,
      "description": "Is Shawarma Enabled?",
      "name": "shawarmaEnabled",
      "type": "boolean"
    },
    {
      "defaultValue": "-",
      "description": "The IAM role name for the service to use; leave '-' to not use",
      "name": "iamRole",
      "type": "string"
    },
    {
      "defaultValue": "100m",
      "description": "Pod Requested CPU",
      "name": "reqCPU",
      "type": "string"
    },
    {
      "defaultValue": "512Mi",
      "description": "Pod Requested Memory",
      "name": "reqMem",
      "type": "string"
    },
    {
      "defaultValue": "200m",
      "description": "Pod Max CPU",
      "name": "maxCPU",
      "type": "string"
    },
    {
      "defaultValue": "4096Mi",
      "description": "Pod Max Memory",
      "name": "maxMem",
      "type": "string"
    },
    {
      "defaultValue": "100",
      "description": "StatsD Sample Rate 0-100",
      "name": "statsdSampleRate",
      "type": "int"
    }
  ],
  "protect": false,
  "metadata": {
    "name": "Phoenix Service Production Test Job Pipeline Template",
    "description": "Creates a Production Pipeline",
    "scopes": [
      "global"
    ]
  },
  "pipeline": {
    "application": "${ templateVariables.appName }",
    "index": 0,
    "keepWaitingPipelines": false,
    "lastModifiedBy": "mmasenthin@centeredgesoftware.com",
    "limitConcurrent": true,
    "name": "${ templateVariables.appName } Production",
    "notifications": [
      {
        "address": "phoenixdev-ci",
        "level": "pipeline",
        "type": "slack",
        "when": [
          "pipeline.starting",
          "pipeline.complete",
          "pipeline.failed"
        ]
      }
    ],
    "stages": [
      {
        "name": "Deploy",
        "refId": "1",
        "clusters": [
          {
            "account": "phoenix",
            "application": "${ templateVariables.appName }",
            "cloudProvider": "kubernetes",
            "containers": [
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "name": "ASPNETCORE_ENVIRONMENT",
                    "value": "Production"
                  },
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "Statsd__Config__StatsdServerName"
                  },
                  {
                    "name": "Statsd__Enabled",
                    "value": "true"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "businessentities-api",
                        "key": "url",
                        "optional": true
                      }
                    },
                    "name": "BusinessEntities__Host"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "connectionString",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__ConnectionString"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "username",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "password",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Password"
                  },
                  {
                    "name": "ASPNETCORE_URLS",
                    "value": "http://localhost:8080/"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "host",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Hosts__0__Host"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "username",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "default-pass",
                        "optional": true,
                        "secretName": "rabbitmq-config"
                      }
                    },
                    "name": "RabbitMQ__Password"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "key",
                        "optional": true,
                        "secretName": "feature-flag-key"
                      }
                    },
                    "name": "LaunchDarklyOptions__SdkKey"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "pdf-api",
                        "key": "url"
                      }
                    },
                    "name": "HtmlToPdf__Host"
                  }
                ],
                "imageDescription": {
                  "account": "gcr-phoenix",
                  "fromTrigger": true,
                  "imageId": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName } (Tag resolved at runtime)",
                  "registry": "us.gcr.io",
                  "repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {},
                "livenessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "name": "${ templateVariables.gcrAccountName }-${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "timeoutSeconds": 5
                },
                "requests": {},
                "volumeMounts": []
              },
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "key",
                        "optional": true,
                        "secretName": "api-gateway"
                      }
                    },
                    "name": "API_GATEWAY_KEY"
                  },
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "STATSD_SERVER"
                  },
                  {
                    "name": "STATSD_SAMPLE_RATE",
                    "value": "100"
                  },
                  {
                    "name": "SERVICE_NAME",
                    "value": "smoke.${ templateVariables.appName }"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ConnectTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ReadTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__SendTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "waiver-upload-options",
                        "key": "max_size",
                        "optional": true
                      }
                    },
                    "name": "WaiverUploadOptions__MaxRequestSize"
                  },
                  {
                    "name": "PROXY_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "HEALTH_CHECK_URI",
                    "value": "/health"
                  },
                  {
                    "name": "PROXY_HOST",
                    "value": "localhost"
                  }
                ],
                "imageDescription": {
                  "account": "gcr-phoenix",
                  "imageId": "us.gcr.io/phoenix-177420/nginx-proxy:27",
                  "registry": "us.gcr.io",
                  "repository": "phoenix-177420/nginx-proxy",
                  "tag": "27"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {},
                "name": "phoenix-177420-nginx-proxy",
                "ports": [
                  {
                    "containerPort": 80,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "requests": {},
                "volumeMounts": []
              }
            ],
            "deployment": {
              "deploymentStrategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 1
                },
                "type": "RollingUpdate"
              },
              "enabled": false,
              "minReadySeconds": 0
            },
            "dnsPolicy": "ClusterFirst",
            "freeFormDetails": "api",
            "initContainers": [],
            "interestingHealthProviderNames": [
              "KubernetesContainer",
              "KubernetesPod"
            ],
            "loadBalancers": [
              "${ templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName }"
            ],
            "namespace": "default",
            "nodeSelector": {},
            "podAnnotations": {
              "environment": "staging",
              "shawarma.centeredge.io/service-name": "${ templateVariables.shawarmaEnabled ? templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName : '' }",
              "iam.amazonaws.com/role": "${ templateVariables.iamRole == '-' ? '' : templateVariables.iamRole }"
            },
            "provider": "kubernetes",
            "region": "default",
            "replicaSetAnnotations": {},
            "stack": "staging",
            "strategy": "",
            "targetSize": 1,
            "terminationGracePeriodSeconds": 30,
            "useSourceCapacity": false,
            "volumeSources": []
          }
        ],
        "requisiteStageRefIds": [],
        "stageTimeoutMs": 600000,
        "type": "deploy"
      },
      {
        "name": "Wait For ALB Health Checks",
        "refId": "2",
        "requisiteStageRefIds": [
          "1"
        ],
        "type": "wait",
        "waitTime": 30
      },
      {
        "name": "Smoke Tests",
        "refId": "3",
        "requisiteStageRefIds": [
          "2"
        ],
        "completeOtherBranchesThenFail": false,
        "continuePipeline": true,
        "failPipeline": false,
        "job": "Phoenix/job/Services/job/Phoenix.Service.${ templateVariables.serviceName }/job/Phoenix.Service.${ templateVariables.serviceName }.Smoke",
        "master": "primary-jenkins",
        "parameters": {},
        "propertyFile": "",
        "type": "jenkins"
      },
      {
        "name": "Deploy Production",
        "refId": "4",
        "requisiteStageRefIds": [
          "3"
        ],
        "clusters": [
          {
            "account": "phoenix",
            "application": "${ templateVariables.appName }",
            "capacity": {
              "desired": 1,
              "max": 9,
              "min": 2
            },
            "cloudProvider": "kubernetes",
            "containers": [
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "name": "ASPNETCORE_ENVIRONMENT",
                    "value": "Production"
                  },
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "Statsd__Config__StatsdServerName"
                  },
                  {
                    "name": "Statsd__Enabled",
                    "value": "true"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "businessentities-api",
                        "key": "url",
                        "optional": true
                      }
                    },
                    "name": "BusinessEntities__Host"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "connectionString",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__ConnectionString"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "username",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "password",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Password"
                  },
                  {
                    "name": "ASPNETCORE_URLS",
                    "value": "http://localhost:8080/"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "host",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Hosts__0__Host"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "username",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "default-pass",
                        "optional": true,
                        "secretName": "rabbitmq-config"
                      }
                    },
                    "name": "RabbitMQ__Password"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "key",
                        "optional": true,
                        "secretName": "feature-flag-key"
                      }
                    },
                    "name": "LaunchDarklyOptions__SdkKey"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "pdf-api",
                        "key": "url"
                      }
                    },
                    "name": "HtmlToPdf__Host"
                  }
                ],
                "imageDescription": {
                  "account": "gcr-phoenix",
                  "fromTrigger": true,
                  "imageId": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName } (Tag resolved at runtime)",
                  "registry": "us.gcr.io",
                  "repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {
                  "cpu": "${ templateVariables.maxCPU }",
                  "memory": "${ templateVariables.maxMem }"
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "${ templateVariables.gcrAccountName }-${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "requests": {
                  "cpu": "${ templateVariables.reqCPU }",
                  "memory": "${ templateVariables.reqMem }"
                },
                "volumeMounts": []
              },
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "STATSD_SERVER"
                  },
                  {
                    "name": "STATSD_SAMPLE_RATE",
                    "value": "${ templateVariables.statsdSampleRate }"
                  },
                  {
                    "name": "SERVICE_NAME",
                    "value": "prod.${ templateVariables.appName }"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ConnectTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ReadTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__SendTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "waiver-upload-options",
                        "key": "max_size",
                        "optional": true
                      }
                    },
                    "name": "WaiverUploadOptions__MaxRequestSize"
                  },
                  {
                    "name": "PROXY_HOST",
                    "value": "localhost"
                  },
                  {
                    "name": "PROXY_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "HEALTH_CHECK_URI",
                    "value": "/health"
                  }
                ],
                "imageDescription": {
                  "account": "gcr-phoenix",
                  "imageId": "us.gcr.io/phoenix-177420/nginx-proxy:27",
                  "registry": "us.gcr.io",
                  "repository": "phoenix-177420/nginx-proxy",
                  "tag": "27"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {
                  "cpu": "${ templateVariables.maxCPU }",
                  "memory": "${ templateVariables.maxMem }"
                },
                "name": "phoenix-177420-nginx-proxy",
                "ports": [
                  {
                    "containerPort": 80,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "requests": {
                  "cpu": "${ templateVariables.reqCPU }",
                  "memory": "${ templateVariables.reqMem }"
                },
                "volumeMounts": []
              }
            ],
            "deployment": {
              "deploymentStrategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 1
                },
                "type": "RollingUpdate"
              },
              "enabled": false,
              "minReadySeconds": 0
            },
            "dnsPolicy": "ClusterFirst",
            "freeFormDetails": "api",
            "initContainers": [],
            "interestingHealthProviderNames": [
              "KubernetesContainer",
              "KubernetesPod"
            ],
            "loadBalancers": [
              "${ templateVariables.prodLoadBalancerName == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodLoadBalancerName }"
            ],
            "namespace": "default",
            "nodeSelector": {},
            "podAnnotations": {
              "environment": "prod",
              "shawarma.centeredge.io/service-name": "${ templateVariables.shawarmaEnabled ? templateVariables.prodLoadBalancerName == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodLoadBalancerName : '' }",
              "iam.amazonaws.com/role": "${ templateVariables.iamRole == '-' ? '' : templateVariables.iamRole }"
            },
            "provider": "kubernetes",
            "region": "default",
            "replicaSetAnnotations": {},
            "scalingPolicy": {
              "cpuUtilization": {
                "target": 40
              }
            },
            "stack": "prod",
            "strategy": "",
            "targetSize": 3,
            "terminationGracePeriodSeconds": 30,
            "useSourceCapacity": false,
            "volumeSources": []
          }
        ],
        "stageEnabled": {
          "expression": "#stage('Smoke Tests')['context']['buildInfo']['result']=='SUCCESS'",
          "type": "expression"
        },

        "type": "deploy"
      },
      {
        "name": "Deploy Jobs Production",
        "refId": "5",
        "requisiteStageRefIds": [
          "3"
        ],
        "clusters": [
          {
            "account": "phoenix",
            "application": "${ templateVariables.appName }",
            "capacity": {
              "desired": 2,
              "max": 9,
              "min": 2
            },
            "cloudProvider": "kubernetes",
            "containers": [
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "name": "ASPNETCORE_ENVIRONMENT",
                    "value": "Production"
                  },
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "Statsd__Config__StatsdServerName"
                  },
                  {
                    "name": "Statsd__Enabled",
                    "value": "true"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "businessentities-api",
                        "key": "url",
                        "optional": true
                      }
                    },
                    "name": "BusinessEntities__Host"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "connectionString",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__ConnectionString"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "username",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "password",
                        "optional": true,
                        "secretName": "couchbase-primary"
                      }
                    },
                    "name": "Couchbase__Password"
                  },
                  {
                    "name": "ASPNETCORE_URLS",
                    "value": "http://localhost:8080/"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "host",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Hosts__0__Host"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "rabbitmq",
                        "key": "username",
                        "optional": true
                      }
                    },
                    "name": "RabbitMQ__Username"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "default-pass",
                        "optional": true,
                        "secretName": "rabbitmq-config"
                      }
                    },
                    "name": "RabbitMQ__Password"
                  },
                  {
                    "envSource": {
                      "secretSource": {
                        "key": "key",
                        "optional": true,
                        "secretName": "feature-flag-key"
                      }
                    },
                    "name": "LaunchDarklyOptions__SdkKey"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "pdf-api",
                        "key": "url",
                        "optional": true
                      }
                    },
                    "name": "HtmlToPdf__Host"
                  }
                ],
                "imageDescription": {
                  "account": "gcr-phoenix",
                  "fromTrigger": true,
                  "imageId": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName } (Tag resolved at runtime)",
                  "registry": "us.gcr.io",
                  "repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {
                  "cpu": "${ templateVariables.maxCPU }",
                  "memory": "${ templateVariables.maxMem }"
                },
                "livenessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "httpHeaders": [],
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "name": "${ templateVariables.gcrAccountName }-${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
                "ports": [
                  {
                    "containerPort": 8080,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 3,
                  "handler": {
                    "execAction": {
                      "commands": []
                    },
                    "httpGetAction": {
                      "httpHeaders": [],
                      "path": "/health?type=ready",
                      "port": 80,
                      "uriScheme": "HTTP"
                    },
                    "tcpSocketAction": {
                      "port": 80
                    },
                    "type": "HTTP"
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "requests": {
                  "cpu": "${ templateVariables.reqCPU }",
                  "memory": "${ templateVariables.reqMem }"
                },
                "volumeMounts": []
              },
              {
                "args": [],
                "command": [],
                "envFrom": [],
                "envVars": [
                  {
                    "envSource": {
                      "fieldRef": {
                        "fieldPath": "status.hostIP"
                      }
                    },
                    "name": "STATSD_SERVER"
                  },
                  {
                    "name": "STATSD_SAMPLE_RATE",
                    "value": "${ templateVariables.statsdSampleRate }"
                  },
                  {
                    "name": "SERVICE_NAME",
                    "value": "prod.${ templateVariables.appName }"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ConnectTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__ReadTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "timeouts",
                        "key": "connect_read_write",
                        "optional": true
                      }
                    },
                    "name": "TimeoutOptions__SendTimeout"
                  },
                  {
                    "envSource": {
                      "configMapSource": {
                        "configMapName": "waiver-upload-options",
                        "key": "max_size",
                        "optional": true
                      }
                    },
                    "name": "WaiverUploadOptions__MaxRequestSize"
                  },
                  {
                    "name": "PROXY_HOST",
                    "value": "localhost"
                  },
                  {
                    "name": "PROXY_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "HEALTH_CHECK_URI",
                    "value": "/health"
                  }
                ],
                "imageDescription": {
                  "imageId": "us.gcr.io/phoenix-177420/nginx-proxy:27",
                  "registry": "us.gcr.io",
                  "repository": "phoenix-177420/nginx-proxy",
                  "tag": "27",
                  "uri": "us.gcr.io/phoenix-177420/nginx-proxy:27"
                },
                "imagePullPolicy": "IFNOTPRESENT",
                "limits": {
                  "cpu": "${ templateVariables.maxCPU }",
                  "memory": "${ templateVariables.maxMem }"
                },
                "name": "phoenix-177420-nginx-proxy",
                "ports": [
                  {
                    "containerPort": 80,
                    "name": "http",
                    "protocol": "TCP"
                  }
                ],
                "requests": {
                  "cpu": "${ templateVariables.reqCPU }",
                  "memory": "${ templateVariables.reqMem }"
                },
                "volumeMounts": []
              }
            ],
            "dnsPolicy": "ClusterFirst",
            "events": [],
            "freeFormDetails": "api",
            "initContainers": [],
            "interestingHealthProviderNames": [
              "KubernetesContainer",
              "KubernetesPod"
            ],
            "loadBalancers": [
              "${ templateVariables.jobsLoadBalancer == '*' ? templateVariables.appName + '-prod-jobs' : templateVariables.jobsLoadBalancer }"
            ],
            "namespace": "default",
            "nodeSelector": {},
            "podAnnotations": {
              "environment": "prod",
              "iam.amazonaws.com/role": "${ templateVariables.iamRole == '-' ? '' : templateVariables.iamRole }",
              "shawarma.centeredge.io/service-name": "${ templateVariables.shawarmaEnabled ? templateVariables.jobsLoadBalancer == '*' ? templateVariables.appName + '-prod-jobs' : templateVariables.jobsLoadBalancer : '' }"
            },
            "provider": "kubernetes",
            "region": "default",
            "replicaSetAnnotations": {},
            "scalingPolicy": {
              "cpuUtilization": {
                "target": 40
              }
            },
            "securityGroups": [],
            "stack": "jobs",
            "strategy": "",
            "targetSize": 3,
            "terminationGracePeriodSeconds": 30,
            "tolerations": [],
            "volumeSources": []
          }
        ],
        "stageEnabled": {
          "expression": "${ templateVariables.jobsEnabled ? \"#stage('Smoke Tests')['context']['buildInfo']['result']=='SUCCESS'\" : false }",
          "type": "expression"
        },
        "stageTimeoutMs": 1200000,
        "type": "deploy"
      },
      {
        "name": "Publish Start Event",
        "refId": "6",
        "requisiteStageRefIds": [
          "3"
        ],
        "alias": "preconfiguredWebhook",
        "parameterValues": {
          "alertType": "info",
          "environment": "${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }",
          "product": "Phoenix",
          "text": "Starting Production Pipeline Deploy For ${ templateVariables.appName }",
          "title": "Starting Production Deploy To ${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }"
        },
        "statusUrlResolution": "getMethod",
        "type": "datadogEvent"
      },
      {
        "name": "Destroy Staging Server Group",
        "refId": "7",
        "requisiteStageRefIds": [
          "4"
        ],
        "cloudProvider": "kubernetes",
        "cloudProviderType": "kubernetes",
        "cluster": "${ templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName }",
        "credentials": "phoenix",
        "interestingHealthProviderNames": [
          "KubernetesService"
        ],
        "namespaces": [
          "default"
        ],
        "target": "current_asg_dynamic",
        "type": "destroyServerGroup"
      },
      {
        "name": "Check Smoke Test Failure",
        "refId": "8",
        "requisiteStageRefIds": [
          "7"
        ],
        "preconditions": [
          {
            "cloudProvider": "kubernetes",
            "context": {
              "expression": "#stage('Smoke Tests')['context']['buildInfo']['result']"
            },
            "failPipeline": true,
            "type": "expression"
          }
        ],
        "stageEnabled": {
          "expression": "#stage('Smoke Tests')['context']['buildInfo']['result']!='SUCCESS'",
          "type": "expression"
        },
        "type": "checkPreconditions"
      },
      {
        "name": "Disable Cluster",
        "refId": "9",
        "requisiteStageRefIds": [
          "4"
        ],
        "cloudProvider": "kubernetes",
        "cloudProviderType": "kubernetes",
        "cluster": "${ templateVariables.prodLoadBalancerName == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodLoadBalancerName }",
        "credentials": "phoenix",
        "interestingHealthProviderNames": [
          "KubernetesService"
        ],
        "namespaces": [
          "default"
        ],
        "preferLargerOverNewer": "false",
        "remainingEnabledServerGroups": 1,
        "type": "disableCluster"
      },
      {
        "name": "Shrink Cluster",
        "refId": "10",
        "requisiteStageRefIds": [
          "9"
        ],
        "allowDeleteActive": false,
        "cloudProvider": "kubernetes",
        "cloudProviderType": "kubernetes",
        "cluster": "${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }",
        "credentials": "phoenix",
        "namespaces": [
          "default"
        ],
        "retainLargerOverNewer": "false",
        "shrinkToSize": 2,
        "type": "shrinkCluster"
      },
      {
        "name": "Publish Fail Event",
        "refId": "11",
        "requisiteStageRefIds": [
          "4"
        ],
        "alias": "preconfiguredWebhook",
        "failOnFailedExpressions": true,
        "parameterValues": {
          "alertType": "error",
          "environment": "${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }",
          "product": "Phoenix",
          "text": "Failed to deploy image to ${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername } 'Deploy Duration:' ${new java.text.SimpleDateFormat('HH:mm:ss').format(#stage('Deploy Production').endTime - execution['startTime'])}",
          "title": "Failed to deploy ${ templateVariables.appName } to ${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }"
        },
        "stageEnabled": {
          "expression": "#stage('Deploy Production').status.toString() != 'SUCCEEDED'",
          "type": "expression"
        },
        "statusUrlResolution": "getMethod",
        "type": "datadogEvent"
      },
      {
        "name": "Publish Success Event",
        "refId": "12",
        "requisiteStageRefIds": [
          "4"
        ],
        "alias": "preconfiguredWebhook",
        "parameterValues": {
          "alertType": "success",
          "environment": "${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }",
          "product": "Phoenix",
          "text": "Deployed image to ${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername } 'Deploy Duration:' ${new java.text.SimpleDateFormat('HH:mm:ss').format(#stage('Deploy Production').endTime - execution['startTime'])}",
          "title": "Deployed ${ templateVariables.appName } to ${ templateVariables.prodClustername == '*' ? templateVariables.appName + '-prod-api' : templateVariables.prodClustername }"
        },
        "stageEnabled": {
          "expression": "#stage('Deploy Production').status.toString() == 'SUCCEEDED'",
          "type": "expression"
        },
        "statusUrlResolution": "getMethod",
        "type": "datadogEvent"
      },
      {
        "name": "Disable Jobs Cluster",
        "refId": "13",
        "requisiteStageRefIds": [
          "5"
        ],
        "cloudProvider": "kubernetes",
        "cloudProviderType": "kubernetes",
        "cluster": "${ templateVariables.jobsClusterName == '*' ? templateVariables.appName + '-jobs-api' : templateVariables.jobsClusterName }",
        "credentials": "phoenix",
        "interestingHealthProviderNames": [
          "KubernetesService"
        ],
        "namespaces": [
          "default"
        ],
        "preferLargerOverNewer": "false",
        "remainingEnabledServerGroups": 1,
        "type": "disableCluster",
        "stageEnabled": {
          "expression": "${ templateVariables.jobsEnabled  }",
          "type": "expression"
        }
      },
      {
        "name": "Shrink Jobs Cluster",
        "refId": "14",
        "requisiteStageRefIds": [
          "13"
        ],
        "allowDeleteActive": false,
        "cloudProvider": "kubernetes",
        "cloudProviderType": "kubernetes",
        "cluster": "${ templateVariables.jobsClusterName == '*' ? templateVariables.appName + '-jobs-api' : templateVariables.jobsClusterName }",
        "credentials": "phoenix",
        "namespaces": [
          "default"
        ],
        "retainLargerOverNewer": "false",
        "shrinkToSize": 2,
        "type": "shrinkCluster",
        "stageEnabled": {
          "expression": "${ templateVariables.jobsEnabled  }",
          "type": "expression"
        }
      }
    ],
    "triggers": [
      {
        "account": "gcr-phoenix",
        "enabled": true,
        "organization": "${ templateVariables.gcrAccountName }",
        "registry": "us.gcr.io",
        "repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
        "runAsUser": "phoenix-svc-account",
        "type": "docker"
      }
    ]
  }
}
