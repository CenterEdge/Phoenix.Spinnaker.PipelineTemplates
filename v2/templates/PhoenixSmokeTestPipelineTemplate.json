{
  "schema": "v2",
  "id": "phnx-smoke-test-pipeline-template",
  "protect": false,
  "metadata": {
    "name": "Phoenix Service Smoke Test Pipeline Template",
    "description": "Creates a Smoke Test Pipeline",
    "scopes": [ "global" ]
  },
  "variables": [
    {
      "defaultValue": "",
      "description": "Application Name",
      "name": "appName",
      "type": "string"
    },
	{
      "defaultValue": "*",
      "description": "Staging Cluster Name (i.e. waivers-prod-api); leave '*' to use default pattern: {appName}-staging-temp.",
      "name": "stagingClustername",
      "type": "string"
    },
	{
      "defaultValue": "*",
      "description": "The Prod Load Balancer Name (i.e. waivers-staging-api); leave '*' to use default pattern: {appName}-staging-api.",
      "name": "stagingLoadBalancerName",
      "type": "string"
    },
	{
      "defaultValue": "phoenix-177420",
      "description": "The GCR account name that contains the image",
      "name": "gcrAccountName",
      "type": "string"	
	},
	{
      "defaultValue": "*",
      "description": "The image name to pull; leave '*' to use default pattern: phoenix-service-{appName}",
      "name": "gcrImageName",
      "type": "string"	
	},
	{
      "defaultValue": "*",
      "description": "The image name to pull; leave '*' to use latest",
      "name": "gcrImageVersion",
      "type": "string"	
	},
	{
      "defaultValue": "-",
      "description": "The IAM role name for the service to use; leave '-' to not use",
      "name": "iamRole",
      "type": "string"	
	}
  ],
  "pipeline": {
	 "application": "${ templateVariables.appName }",
	 "index": 1,
	 "keepWaitingPipelines": false,
	 "lastModifiedBy": "mmasenthin@centeredgesoftware.com",
	 "limitConcurrent": true,
	 "name": "${ templateVariables.appName } Temp Smoke Test",
	 "stages": [
	  {
	   "clusters": [
		{
		 "account": "phoenix",
		 "application": "${ templateVariables.appName }",
		 "cloudProvider": "kubernetes",
		 "containers": [
		  {
		   "args": [],
		   "command": [],
		   "envFrom": [],
		   "envVars": [
			{
			 "name": "ASPNETCORE_ENVIRONMENT",
			 "value": "Staging"
			},
			{
			 "envSource": {
			  "fieldRef": {
			   "fieldPath": "status.hostIP"
			  }
			 },
			 "name": "Statsd__Config__StatsdServerName"
			},
			{
			 "name": "Statsd__Enabled",
			 "value": "true"
			},
			{
			 "envSource": {
			  "configMapSource": {
			   "configMapName": "businessentities-api",
			   "key": "url",
			   "optional": true
			  }
			 },
			 "name": "BusinessEntities__Host"
			},
			{
			 "envSource": {
			  "secretSource": {
			   "key": "connectionString",
			   "optional": true,
			   "secretName": "couchbase-primary"
			  }
			 },
			 "name": "Couchbase__ConnectionString"
			},
			{
			 "envSource": {
			  "secretSource": {
			   "key": "username",
			   "optional": true,
			   "secretName": "couchbase-primary"
			  }
			 },
			 "name": "Couchbase__Username"
			},
			{
			 "envSource": {
			  "secretSource": {
			   "key": "password",
			   "optional": true,
			   "secretName": "couchbase-primary"
			  }
			 },
			 "name": "Couchbase__Password"
			},
			{
			 "name": "ASPNETCORE_URLS",
			 "value": "http://localhost:8080/"
			},
			{
			 "envSource": {
			  "configMapSource": {
			   "configMapName": "rabbitmq",
			   "key": "host",
			   "optional": true
			  }
			 },
			 "name": "RabbitMQ__Hosts__0__Host"
			},
			{
			 "envSource": {
			  "configMapSource": {
			   "configMapName": "rabbitmq",
			   "key": "username",
			   "optional": true
			  }
			 },
			 "name": "RabbitMQ__Username"
			},
			{
			 "envSource": {
			  "secretSource": {
			   "key": "default-pass",
			   "optional": true,
			   "secretName": "rabbitmq-config"
			  }
			 },
			 "name": "RabbitMQ__Password"
			},
			{
			 "envSource": {
			  "secretSource": {
			   "key": "key",
			   "optional": true,
			   "secretName": "feature-flag-key"
			  }
			 },
			 "name": "LaunchDarklyOptions__SdkKey"
			}
		   ],
		   "imageDescription": {
			"account": "gcr-phoenix",
			"imageId": "us.gcr.io/${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }:${ templateVariables.gcrImageVersion == '*' ? 'latest' : templateVariables.gcrImageVersion }",
			"registry": "us.gcr.io",
			"repository": "${ templateVariables.gcrAccountName }/${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
			"tag": "latest"
		   },
		   "imagePullPolicy": "IFNOTPRESENT",
		   "limits": {},
		   "livenessProbe": {
			"failureThreshold": 3,
			"handler": {
			 "execAction": {
			  "commands": []
			 },
			 "httpGetAction": {
			  "path": "/health?type=ready",
			  "port": 80,
			  "uriScheme": "HTTP"
			 },
			 "tcpSocketAction": {
			  "port": 80
			 },
			 "type": "HTTP"
			},
			"initialDelaySeconds": 5,
			"periodSeconds": 10,
			"successThreshold": 1,
			"timeoutSeconds": 5
		   },
		   "name": "${ templateVariables.gcrAccountName }-${ templateVariables.gcrImageName == '*' ? 'phoenix-service-' + templateVariables.appName : templateVariables.gcrImageName }",
		   "ports": [
			{
			 "containerPort": 8080,
			 "name": "http",
			 "protocol": "TCP"
			}
		   ],
		   "readinessProbe": {
			"failureThreshold": 3,
			"handler": {
			 "execAction": {
			  "commands": []
			 },
			 "httpGetAction": {
			  "path": "/health?type=ready",
			  "port": 80,
			  "uriScheme": "HTTP"
			 },
			 "tcpSocketAction": {
			  "port": 80
			 },
			 "type": "HTTP"
			},
			"initialDelaySeconds": 15,
			"periodSeconds": 5,
			"successThreshold": 1,
			"timeoutSeconds": 5
		   },
		   "requests": {},
		   "volumeMounts": []
		  },
		  {
		   "args": [],
		   "command": [],
		   "envFrom": [],
		   "envVars": [
			{
			 "envSource": {
			  "secretSource": {
			   "key": "key",
			   "optional": true,
			   "secretName": "api-gateway"
			  }
			 },
			 "name": "API_GATEWAY_KEY"
			},
			{
			 "envSource": {
			  "fieldRef": {
			   "fieldPath": "status.hostIP"
			  }
			 },
			 "name": "STATSD_SERVER"
			},
			{
			 "name": "STATSD_SAMPLE_RATE",
			 "value": "1"
			},
			{
			 "name": "SERVICE_NAME",
			 "value": "staging.${ templateVariables.appName }"
			},
			{
				"envSource": {
					"configMapSource": {
						"configMapName": "timeouts",
						"key": "connect_read_write",
						"optional": true
					}
				},
				"name": "TimeoutOptions__ConnectTimeout"
			},
			{
				"envSource": {
					"configMapSource": {
						"configMapName": "timeouts",
						"key": "connect_read_write",
						"optional": true
					}
				},
				"name": "TimeoutOptions__ReadTimeout"
			},
			{
				"envSource": {
					"configMapSource": {
						"configMapName": "timeouts",
						"key": "connect_read_write",
						"optional": true
					}
				},
				"name": "TimeoutOptions__SendTimeout"
			},
			{
			 "envSource": {
			  "configMapSource": {
			   "configMapName": "waiver-upload-options",
			   "key": "max_size",
			   "optional": true
			  }
			 },
			 "name": "WaiverUploadOptions__MaxRequestSize"
			}
		   ],
		   "imageDescription": {
			"account": "gcr-phoenix",
			"imageId": "us.gcr.io/phoenix-177420/nginx-proxy:27",
			"registry": "us.gcr.io",
			"repository": "phoenix-177420/nginx-proxy",
			"tag": "27"
		   },
		   "imagePullPolicy": "IFNOTPRESENT",
		   "limits": {},
		   "name": "phoenix-177420-nginx-proxy",
		   "ports": [
			{
			 "containerPort": 80,
			 "name": "http",
			 "protocol": "TCP"
			}
		   ],
		   "requests": {},
		   "volumeMounts": []
		  }
		 ],
		 "deployment": {
		  "deploymentStrategy": {
		   "rollingUpdate": {
			"maxSurge": 1,
			"maxUnavailable": 1
		   },
		   "type": "RollingUpdate"
		  },
		  "enabled": false,
		  "minReadySeconds": 0
		 },
		 "dnsPolicy": "ClusterFirst",
		 "freeFormDetails": "temp",
		 "initContainers": [],
		 "interestingHealthProviderNames": [
		  "KubernetesContainer",
		  "KubernetesPod"
		 ],
		 "loadBalancers": [
		  "${ templateVariables.stagingLoadBalancerName == '*' ? templateVariables.appName + '-staging-api' : templateVariables.stagingLoadBalancerName }"
		 ],
		 "namespace": "default",
		 "nodeSelector": {},
		 "podAnnotations": {
			"environment": "staging",
			"iam.amazonaws.com/role": "${ templateVariables.iamRole == '-' ? '' : templateVariables.iamRole }"
		 },
		 "provider": "kubernetes",
		 "region": "default",
		 "replicaSetAnnotations": {},
		 "stack": "staging",
		 "strategy": "",
		 "targetSize": 1,
		 "terminationGracePeriodSeconds": 30,
		 "useSourceCapacity": false,
		 "volumeSources": []
		}
	   ],
	   "name": "Deploy",
	   "refId": "1",
	   "requisiteStageRefIds": [],
	   "stageTimeoutMs": 300000,
	   "type": "deploy"
	  },
	  {
	   "allowDeleteActive": false,
	   "cloudProvider": "kubernetes",
	   "cloudProviderType": "kubernetes",
	   "cluster": "${ templateVariables.stagingClustername == '*' ? templateVariables.appName + '-staging-temp' : templateVariables.stagingClustername }",
	   "credentials": "phoenix",
	   "name": "Shrink Cluster",
	   "namespaces": [
		"default"
	   ],
	   "refId": "2",
	   "requisiteStageRefIds": [
		"1"
	   ],
	   "retainLargerOverNewer": "false",
	   "shrinkToSize": 1,
	   "type": "shrinkCluster"
	  }
	 ],
	 "triggers": []
	}
  }