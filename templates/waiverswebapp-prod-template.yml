schema: "1"
id: phoenix-waiverswebapp-prod-template
protect: false
configuration:
  concurrentExecutions:
    limitConcurrent: true
    parallel: false
  notifications:
  - address: phoenixdev-ci
    level: pipeline
    message:
      pipeline.failed:
        text: "Pipeline Failure...@channel"
    name: slack0
    type: slack
    when:
    - pipeline.starting
    - pipeline.complete
    - pipeline.failed
variables:
- name: application
  description: The name of the application to scope this pipeline to
- name: loadbalancer
  description: The name of the load balancer for clusters created by this pipeline
- name: clustername
  description: The name of cluster that contains the k8s pods generated by this pipeline
- name: podAnnotations
  type: object
  defaultValue: {}
  description: The annotations to assign to pods
- name: gcrimage
  description: The GCR image of the container to run
- name: gcrrepo
  description: The GCR repository to connect to
stages:
- config:
    clusters:
    - account: phoenix
      application: "{{ application }}"
      capacity:
        desired: 1
        max: 5
        min: 2
      cloudProvider: kubernetes
      containers:
      - args: []
        command: []
        envVars: []
        imageDescription:
          account: gcr-phoenix
          fromTrigger: true
          imageId: "{{ gcrimage }}"
          registry: us.gcr.io
          repository: "{{ gcrrepo }}"
        imagePullPolicy: IFNOTPRESENT
        limits:
          cpu: 100m
          memory: 256Mi
        livenessProbe:
          failureThreshold: 3
          handler:
            execAction:
              commands: []
            httpGetAction:
              path: /
              port: 80
              uriScheme: HTTP
            tcpSocketAction:
              port: 80
            type: TCP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: phoenix-177420-phoenix-onlinewaivers
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          handler:
            execAction:
              commands: []
            httpGetAction:
              path: /
              port: 80
              uriScheme: HTTP
            tcpSocketAction:
              port: 80
            type: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        requests:
          cpu: 50m
          memory: 128Mi
        volumeMounts: []
      deployment:
        deploymentStrategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
          type: RollingUpdate
        enabled: false
        minReadySeconds: 0
      dnsPolicy: ClusterFirst
      freeFormDetails: ui
      initContainers: []
      interestingHealthProviderNames:
      - KubernetesContainer
      - KubernetesPod
      loadBalancers:
      - "{{ loadbalancer }}"
      namespace: ui
      nodeSelector: {}
      podAnnotations: "{{ podAnnotations }}"
      provider: kubernetes
      region: ui
      replicaSetAnnotations: {}
      scalingPolicy:
        cpuUtilization:
          target: 40
      stack: prod
      strategy: ""
      targetSize: 2
      terminationGracePeriodSeconds: 30
      volumeSources: []
  id: deploy1
  inheritanceControl: {}
  inject: {}
  name: Deploy
  type: deploy
- config:
    cloudProvider: kubernetes
    cloudProviderType: kubernetes
    cluster: "{{ clustername }}"
    credentials: phoenix
    interestingHealthProviderNames:
    - KubernetesService
    namespaces:
    - ui
    preferLargerOverNewer: "false"
    remainingEnabledServerGroups: 1
  dependsOn:
  - deploy1
  id: disableCluster2
  inheritanceControl: {}
  inject: {}
  name: Disable Cluster
  type: disableCluster
- config:
    allowDeleteActive: false
    cloudProvider: kubernetes
    cloudProviderType: kubernetes
    cluster: "{{ clustername }}"
    credentials: phoenix
    namespaces:
    - ui
    retainLargerOverNewer: "false"
    shrinkToSize: 3
  dependsOn:
  - disableCluster2
  id: shrinkCluster3
  inheritanceControl: {}
  inject: {}
  name: Shrink Cluster
  type: shrinkCluster
